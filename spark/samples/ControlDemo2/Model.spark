agent TestAgent : SpaceAgent

to create
	super 0.2 static-circle
	color = black
	remove-collision-mask 0
	remove-collision-mask 1
	remove-collision-mask 2
end


; SimpleAgent
agent SimpleAgent : SpaceAgent


to create
        super 0.4 dynamic-circle
        color = green

;        shape = create-rect 0.4 0.3
;        shape = create-circle 0.5

        set-collision-category 2
end

to step
	apply-force [0, -20, 0]
end


; Model
model TestModel

space PhysicalSpace2d -10 10 -10 10 false false


to create-agent1 [p1:vector p2:vector dx:number w:number]
	var p = (p1 + p2) / 2
	var d = (p2 - p1).length
	
	if d < 1e-3 [ exit ]
	
	ask create-one Agent1
	[
;		set-collision-category 1
;		remove-collision-mask 1

		var alpha = (p1 - p) * [1,0,0] / (p1 - p).length
		var phi = acos alpha
		
		if p1.y < p.y 
			[ phi = 2 * pi - phi ]
		
		shape = create-rect (d / 2 + dx) (w / 2)

		move-to p
		rotation = phi
	]
end


; Connects agents of type Agent1 at the given point
to connect-agents [p:vector]
	var a = agents-at Agent1 p 0.1
	var n = count a
	
	for i = 0 : n - 1
	[
		var a0 = get a i
	
		for j = i + 1 : n - 1
		[
			var a1 = get a j
			ask create-one MyLink
			[
				anchor1 = p
				anchor2 = p + [0.01,0,0]
				connect a0 a1
			]
		]
	]

	var b = agents-at TestAgent p 0.1
	
	ask a
	[
		var a0 = self
	
		ask b
		[
			var a1 = self
		
			ask create-one MyLink
			[
				anchor1 = p
				anchor2 = p + [0.01,0,0]
				params 1 0.5
				connect a0 a1
			]
		]
	]
end




to begin-step
	; Process all control events

	while true
	[
        var event = next-mouse-event

        if event == null [ break ]
        if event.event-type == "LBUTTON_DOWN"
        [
                ask create-one SimpleAgent
                [
                        move-to event.position
                ]
        ]

	]
end



to setup
	for j = -5 : 5
	[
		var y = j * sqrt 3
		
		var x = -8
		if j % 2 == 0
			[ x += 1 ]
		
		for i = 0 : 5
		[
			var p = create-vector x y 0
			ask create-one TestAgent
			[
				move-to p
			]

			ifelse (j + i) % 2 == 0
				[ x += 2 ]
				[ x += 4 ]
		]
	]

	ask agents TestAgent
	[
		var list = agents-at TestAgent position 2
		
		ask list
		[
			if self == myself [ continue ]
			var y1 = myself.position.y
			var y2 = self.position.y
			
			if y1 > y2 [ continue ]
			if y1 == y2
				[ if myself.position.x > self.position.x [ continue ] ]
			this.create-agent1 myself.position self.position 0.1 0.2			
		]
	]
	
	
	ask agents TestAgent
	[
		this.connect-agents position
	]
	
;	var p1 = [-3, 3, 0]
;	var p2 = [4, -1, 0]
;	var p3 = [-6, 1, 0]
;	var p4 = [3, 4, 0]
;	
;	create-agent1 p1 p2 0.4 0.2
;	create-agent1 p1 p3 0.4 0.2
;	create-agent1 p1 p4 0.2 0.4
	
;	connect-agents p1
end




